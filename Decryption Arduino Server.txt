#include <ESP8266HTTPClient.h>
//#include <WiFiClient.h>
#include <Arduino.h>
#include <ESP8266WiFi.h>
#include <ESPAsyncTCP.h>
#include <ESPAsyncWebServer.h>

AsyncWebServer server(80);

// REPLACE WITH YOUR NETWORK CREDENTIALS
const char* ssid = "Hidden";
const char* password = "39913221332211";

const char* PARAM_INPUT_1 = "input1";
const char* PARAM_INPUT_2 = "input2";
const char* PARAM_INPUT_3 = "input3";

const char* valueESP1 = "ESpOne";


String turbine;

// HTML web page to handle 3 input fields (input1, input2, input3)
const char index_html[] PROGMEM = R"rawliteral(
<!DOCTYPE HTML>
<html>
<head>
  <title>ESPP Input Form</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  </head><body>
  <form action="/get">
    input1: <input type="text" name="input1">
    <input type="submit" value="Submit">
  </form><br>
</body>
</html>)rawliteral";

void notFound(AsyncWebServerRequest *request) {
  request->send(404, "text/plain", "Not found");
}

 // ENCRYPTION/DECRYPTION /////////

char Ref[94] = {'0','1','2','3','4','5','6','7','8','9',
                'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z',
                'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',
                '`','~','!','@','#','$','%','^','&','*','(',')','-','_','+','=','[',']','{','}','|',';',':','"','<','>',
                '/','?','.',',','\'','\\'};

String Encrypt[94] = {"68", "32", "42", "56", "17", "90", "14", "73", "06", "10", "57", "23", "55", "41", "61", 
"35", "43", "15", "03", "44", "39", "47", "69", "80", "24", "59", "92", "08", "70", "40", "36", "66", "33", "64",
"74", "65", "25", "63", "62", "18", "60", "75", "16", "28", "53", "81", "09", "83", "13", "72", "48", "45", "26",
"89", "02", "46", "76", "67", "82", "27", "91", "58", "19", "86", "01", "71", "87", "84", "85", "52", "37", "49",
"12", "04", "79", "20", "77", "05", "22", "11", "38", "51", "07", "78", "21", "93", "31", "00", "29", "30", "50", "54", "34", "88"};


// Decryption Algorithm
String decryption(String encText)
{
  int idx = 0;
  String res;
  String temp;
  int msgLength = 0;
  int EncLength = 0;
  
  EncLength = sizeof(Encrypt);
  msgLength = encText.length();

  String dataDecrypt[50];
  
  while (idx < msgLength){
    temp = String(encText[idx])+String(encText[idx+1]);
    for(int i=0; i < EncLength; i++) {
      if(temp == Encrypt[i]){
        res += Ref[i];
        }
      }
    idx += 2;
    }
  return res;
  }

void setup() {
  Serial.begin(115200);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  if (WiFi.waitForConnectResult() != WL_CONNECTED) {
    Serial.println("WiFi Failed!");
    return;
  }
  Serial.println();
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());

  // Send web page with input fields to client
  server.on("/", HTTP_GET, [](AsyncWebServerRequest *request){
    request->send_P(200, "text/html", index_html);
  });

  // Send a GET request to <ESP_IP>/get?input1=<inputMessage>
  server.on("/get/espval", HTTP_GET, [] (AsyncWebServerRequest *request) {
    String plainText;
    String cipherText;
    
    if (request->hasParam("value")) {
      plainText = request->getParam("value")->value();
    }   

cipherText = decryption(plainText);
     
    //Serial.println(inputMessage);
    request->send(200, "text/html",cipherText);
  });
  server.onNotFound(notFound);
  server.begin();
}

void loop() {
  
}